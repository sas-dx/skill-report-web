// 要求仕様ID: PLT.1-DB.1 - PostgreSQL データベース設定
generator client {
  provider = "prisma-client-js"
}

datasource db {
  provider = "postgresql"
  url      = env("DATABASE_URL")
}

// 要求仕様ID: ACC.1-USER.1 - ユーザー管理
model User {
  id          String   @id @default(cuid())
  empNo       String   @unique @map("emp_no") // 社員番号
  email       String   @unique
  name        String
  nameKana    String?  @map("name_kana") // ふりがな
  deptId      String?  @map("dept_id") // 部署ID
  positionId  String?  @map("position_id") // 役職ID
  joinDate    DateTime? @map("join_date") // 入社日
  isActive    Boolean  @default(true) @map("is_active")
  createdAt   DateTime @default(now()) @map("created_at")
  updatedAt   DateTime @updatedAt @map("updated_at")

  // リレーション
  department  Department? @relation(fields: [deptId], references: [id])
  position    Position?   @relation(fields: [positionId], references: [id])
  userRoles   UserRole[]
  skills      UserSkill[]
  careerPlans CareerPlan[]
  workRecords WorkRecord[]
  trainings   UserTraining[]

  @@map("users")
}

// 要求仕様ID: ACC.1-ROLE.1 - ロール管理
model Role {
  id          String   @id @default(cuid())
  name        String   @unique
  description String?
  isActive    Boolean  @default(true) @map("is_active")
  createdAt   DateTime @default(now()) @map("created_at")
  updatedAt   DateTime @updatedAt @map("updated_at")

  // リレーション
  userRoles   UserRole[]
  permissions RolePermission[]

  @@map("roles")
}

// 要求仕様ID: ACC.1-ROLE.1 - ユーザーロール中間テーブル
model UserRole {
  id     String @id @default(cuid())
  userId String @map("user_id")
  roleId String @map("role_id")

  // リレーション
  user User @relation(fields: [userId], references: [id], onDelete: Cascade)
  role Role @relation(fields: [roleId], references: [id], onDelete: Cascade)

  @@unique([userId, roleId])
  @@map("user_roles")
}

// 要求仕様ID: ACC.1-PERM.1 - 権限管理
model Permission {
  id          String   @id @default(cuid())
  name        String   @unique
  description String?
  resource    String   // リソース名
  action      String   // アクション名
  createdAt   DateTime @default(now()) @map("created_at")
  updatedAt   DateTime @updatedAt @map("updated_at")

  // リレーション
  rolePermissions RolePermission[]

  @@map("permissions")
}

// 要求仕様ID: ACC.1-PERM.1 - ロール権限中間テーブル
model RolePermission {
  id           String @id @default(cuid())
  roleId       String @map("role_id")
  permissionId String @map("permission_id")

  // リレーション
  role       Role       @relation(fields: [roleId], references: [id], onDelete: Cascade)
  permission Permission @relation(fields: [permissionId], references: [id], onDelete: Cascade)

  @@unique([roleId, permissionId])
  @@map("role_permissions")
}

// 要求仕様ID: PRO.1-ORG.1 - 組織管理
model Department {
  id        String   @id @default(cuid())
  code      String   @unique
  name      String
  parentId  String?  @map("parent_id")
  level     Int      @default(1)
  sortOrder Int      @default(0) @map("sort_order")
  isActive  Boolean  @default(true) @map("is_active")
  createdAt DateTime @default(now()) @map("created_at")
  updatedAt DateTime @updatedAt @map("updated_at")

  // リレーション
  parent   Department?  @relation("DepartmentHierarchy", fields: [parentId], references: [id])
  children Department[] @relation("DepartmentHierarchy")
  users    User[]

  @@map("departments")
}

// 要求仕様ID: PRO.1-ORG.1 - 役職管理
model Position {
  id        String   @id @default(cuid())
  code      String   @unique
  name      String
  level     Int      @default(1)
  sortOrder Int      @default(0) @map("sort_order")
  isActive  Boolean  @default(true) @map("is_active")
  createdAt DateTime @default(now()) @map("created_at")
  updatedAt DateTime @updatedAt @map("updated_at")

  // リレーション
  users User[]

  @@map("positions")
}

// 要求仕様ID: SKL.1-HIER.1 - スキルマスタ管理
model SkillMaster {
  id           String   @id @default(cuid())
  code         String   @unique
  name         String
  categoryId   String   @map("category_id")
  description  String?
  level        Int      @default(1) // 階層レベル
  sortOrder    Int      @default(0) @map("sort_order")
  isActive     Boolean  @default(true) @map("is_active")
  createdAt    DateTime @default(now()) @map("created_at")
  updatedAt    DateTime @updatedAt @map("updated_at")

  // リレーション
  category   SkillCategory @relation(fields: [categoryId], references: [id])
  userSkills UserSkill[]

  @@map("skill_masters")
}

// 要求仕様ID: SKL.1-HIER.1 - スキルカテゴリ管理
model SkillCategory {
  id        String   @id @default(cuid())
  code      String   @unique
  name      String
  parentId  String?  @map("parent_id")
  level     Int      @default(1)
  sortOrder Int      @default(0) @map("sort_order")
  isActive  Boolean  @default(true) @map("is_active")
  createdAt DateTime @default(now()) @map("created_at")
  updatedAt DateTime @updatedAt @map("updated_at")

  // リレーション
  parent   SkillCategory?  @relation("SkillCategoryHierarchy", fields: [parentId], references: [id])
  children SkillCategory[] @relation("SkillCategoryHierarchy")
  skills   SkillMaster[]

  @@map("skill_categories")
}

// 要求仕様ID: SKL.1-EVAL.1 - ユーザースキル評価
model UserSkill {
  id           String    @id @default(cuid())
  userId       String    @map("user_id")
  skillId      String    @map("skill_id")
  level        Int       // 1:△, 2:○, 3:◎, 4:★
  acquiredDate DateTime? @map("acquired_date")
  note         String?
  createdAt    DateTime  @default(now()) @map("created_at")
  updatedAt    DateTime  @updatedAt @map("updated_at")

  // リレーション
  user  User        @relation(fields: [userId], references: [id], onDelete: Cascade)
  skill SkillMaster @relation(fields: [skillId], references: [id])

  @@unique([userId, skillId])
  @@map("user_skills")
}

// 要求仕様ID: CAR.1-PLAN.1 - キャリア計画管理
model CareerPlan {
  id          String    @id @default(cuid())
  userId      String    @map("user_id")
  year        Int
  vision      String?   // キャリアビジョン
  goals       String?   // 年間目標
  skills      String?   // 習得予定スキル
  startDate   DateTime? @map("start_date")
  endDate     DateTime? @map("end_date")
  status      String    @default("draft") // draft, active, completed
  createdAt   DateTime  @default(now()) @map("created_at")
  updatedAt   DateTime  @updatedAt @map("updated_at")

  // リレーション
  user      User           @relation(fields: [userId], references: [id], onDelete: Cascade)
  progress  CareerProgress[]

  @@unique([userId, year])
  @@map("career_plans")
}

// 要求仕様ID: CAR.1-PROG.1 - キャリア進捗管理
model CareerProgress {
  id           String    @id @default(cuid())
  careerPlanId String    @map("career_plan_id")
  quarter      Int       // 1-4
  achievement  String?   // 達成内容
  challenges   String?   // 課題
  nextActions  String?   @map("next_actions") // 次のアクション
  progressRate Int       @default(0) @map("progress_rate") // 進捗率(0-100)
  createdAt    DateTime  @default(now()) @map("created_at")
  updatedAt    DateTime  @updatedAt @map("updated_at")

  // リレーション
  careerPlan CareerPlan @relation(fields: [careerPlanId], references: [id], onDelete: Cascade)

  @@unique([careerPlanId, quarter])
  @@map("career_progress")
}

// 要求仕様ID: WPM.1-DET.1 - 作業実績管理
model WorkRecord {
  id          String    @id @default(cuid())
  userId      String    @map("user_id")
  projectName String    @map("project_name")
  role        String?   // 役割
  period      String?   // 期間
  description String?   // 作業内容
  technologies String?  // 使用技術
  achievements String?  // 成果・実績
  startDate   DateTime? @map("start_date")
  endDate     DateTime? @map("end_date")
  createdAt   DateTime  @default(now()) @map("created_at")
  updatedAt   DateTime  @updatedAt @map("updated_at")

  // リレーション
  user User @relation(fields: [userId], references: [id], onDelete: Cascade)

  @@map("work_records")
}

// 要求仕様ID: TRN.1-ATT.1 - 研修管理
model Training {
  id          String   @id @default(cuid())
  name        String
  category    String?
  provider    String?  // 提供者
  description String?
  duration    Int?     // 時間数
  pduPoints   Int?     @map("pdu_points") // PDUポイント
  isActive    Boolean  @default(true) @map("is_active")
  createdAt   DateTime @default(now()) @map("created_at")
  updatedAt   DateTime @updatedAt @map("updated_at")

  // リレーション
  userTrainings UserTraining[]

  @@map("trainings")
}

// 要求仕様ID: TRN.1-ATT.1 - ユーザー研修受講履歴
model UserTraining {
  id           String    @id @default(cuid())
  userId       String    @map("user_id")
  trainingId   String    @map("training_id")
  attendedDate DateTime  @map("attended_date")
  status       String    @default("completed") // completed, in_progress, cancelled
  score        Int?      // 点数
  certificate  String?   // 証明書
  note         String?
  createdAt    DateTime  @default(now()) @map("created_at")
  updatedAt    DateTime  @updatedAt @map("updated_at")

  // リレーション
  user     User     @relation(fields: [userId], references: [id], onDelete: Cascade)
  training Training @relation(fields: [trainingId], references: [id])

  @@unique([userId, trainingId, attendedDate])
  @@map("user_trainings")
}

// 要求仕様ID: PLT.1-AUDIT.1 - 監査ログ
model AuditLog {
  id        String   @id @default(cuid())
  userId    String?  @map("user_id")
  action    String   // CREATE, UPDATE, DELETE, LOGIN, LOGOUT
  resource  String   // テーブル名やリソース名
  resourceId String? @map("resource_id")
  oldValues Json?    @map("old_values")
  newValues Json?    @map("new_values")
  ipAddress String?  @map("ip_address")
  userAgent String?  @map("user_agent")
  createdAt DateTime @default(now()) @map("created_at")

  @@map("audit_logs")
}
