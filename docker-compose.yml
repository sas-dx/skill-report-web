# 要求仕様ID: PLT.1-DB.1 - PostgreSQL データベース設定
# 要求仕様ID: PLT.1-DOCKER.1 - 開発環境Docker化


services:
  # Next.js アプリケーション（開発環境）
  app:
    build:
      context: .
      dockerfile: Dockerfile.dev
    container_name: skill-report-app
    restart: unless-stopped
    ports:
      - "3000:3000"
    volumes:
      # ソースコードをバインドマウント（ホットリロード対応）
      - .:/app
      # node_modules を名前付きボリュームで分離（パフォーマンス向上）
      - node_modules:/app/node_modules
      # .next キャッシュを名前付きボリュームで分離
      - nextjs_cache:/app/.next
    environment:
      - NODE_ENV=development
      - DATABASE_URL=postgresql://skill_user:skill_password@postgres:5432/skill_report_db
      - NEXTAUTH_URL=http://localhost:3001
      - NEXTAUTH_SECRET=development-secret-key
    depends_on:
      postgres:
        condition: service_healthy
    networks:
      - skill-report-network
    # 開発時のホットリロード用設定
    stdin_open: true
    tty: true

  postgres:
    image: postgres:15-alpine
    container_name: skill-report-postgres
    restart: unless-stopped
    environment:
      POSTGRES_DB: skill_report_db
      POSTGRES_USER: skill_user
      POSTGRES_PASSWORD: skill_password
      POSTGRES_INITDB_ARGS: "--encoding=UTF-8 --locale=C"
    ports:
      - "5433:5432"
    volumes:
      - postgres_data:/var/lib/postgresql/data
      - ./scripts/init-db.sql/init-db.sql:/docker-entrypoint-initdb.d/init-db.sql
    networks:
      - skill-report-network
    healthcheck:
      test: ["CMD-SHELL", "pg_isready -U skill_user -d skill_report_db"]
      interval: 10s
      timeout: 5s
      retries: 5

  # 開発用 pgAdmin（オプション）
  pgadmin:
    image: dpage/pgadmin4:latest
    container_name: skill-report-pgadmin
    restart: unless-stopped
    environment:
      PGADMIN_DEFAULT_EMAIL: admin@example.com
      PGADMIN_DEFAULT_PASSWORD: admin123
      PGADMIN_CONFIG_SERVER_MODE: 'False'
    ports:
      - "8080:80"
    volumes:
      - pgadmin_data:/var/lib/pgadmin
    networks:
      - skill-report-network
    depends_on:
      postgres:
        condition: service_healthy

volumes:
  postgres_data:
    driver: local
  pgadmin_data:
    driver: local
  node_modules:
    driver: local
  nextjs_cache:
    driver: local

networks:
  skill-report-network:
    driver: bridge
