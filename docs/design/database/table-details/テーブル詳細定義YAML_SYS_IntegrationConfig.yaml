table_name: SYS_IntegrationConfig
logical_name: 外部連携設定
category: システム系
revision_history:
- version: 1.0.0
  date: '2025-06-01'
  author: 開発チーム
  changes: 初版作成 - 外部連携設定システムテーブルの詳細定義
- version: 2.0.0
  date: '2025-06-22'
  author: 自動変換ツール
  changes: テンプレート形式への自動変換
overview: 'SYS_IntegrationConfig（外部連携設定）は、外部システムとの連携に必要な設定情報を管理するシステムテーブルです。


  主な目的：

  - 外部API接続設定の管理

  - 認証情報・エンドポイント情報の管理

  - 連携パラメータ・設定値の管理

  - 外部システム別設定の管理

  - テナント別連携設定の管理


  このテーブルは、通知・連携管理機能において外部システムとの安全で効率的な連携を実現する重要なシステムデータです。

  '
columns:
- name: id
  logical: ID
  type: VARCHAR
  length: 50
  'null': true
  unique: true
  encrypted: false
  description: プライマリキー（UUID）
- name: tenant_id
  logical: テナントID
  type: VARCHAR
  length: 50
  'null': true
  unique: false
  encrypted: false
  description: マルチテナント識別子
- name: integration_key
  logical: 連携キー
  type: VARCHAR
  length: 100
  'null': true
  unique: false
  encrypted: false
  description: 連携設定の識別キー（例：slack_webhook、teams_connector等）
- name: integration_name
  logical: 連携名
  type: VARCHAR
  length: 200
  'null': true
  unique: false
  encrypted: false
  description: 連携設定の表示名
- name: integration_type
  logical: 連携タイプ
  type: ENUM
  length: null
  'null': true
  unique: false
  encrypted: false
  description: 連携の種類（WEBHOOK:Webhook、API:REST API、OAUTH:OAuth認証、SMTP:メール送信）
  enum_values:
  - WEBHOOK
  - API
  - OAUTH
  - SMTP
- name: endpoint_url
  logical: エンドポイントURL
  type: VARCHAR
  length: 500
  'null': true
  unique: false
  encrypted: false
  description: 連携先のエンドポイントURL
- name: auth_type
  logical: 認証タイプ
  type: ENUM
  length: null
  'null': true
  unique: false
  encrypted: false
  description: 認証方式（NONE:認証なし、BASIC:Basic認証、BEARER:Bearer Token、OAUTH2:OAuth2.0、API_KEY:APIキー）
  enum_values:
  - NONE
  - BASIC
  - BEARER
  - OAUTH2
  - API_KEY
- name: auth_config
  logical: 認証設定
  type: TEXT
  length: null
  'null': true
  unique: false
  encrypted: true
  description: 認証に必要な設定情報（JSON形式、暗号化必須）
- name: connection_config
  logical: 接続設定
  type: TEXT
  length: null
  'null': true
  unique: false
  encrypted: false
  description: 接続に関する設定情報（JSON形式）
- name: request_headers
  logical: リクエストヘッダー
  type: TEXT
  length: null
  'null': true
  unique: false
  encrypted: false
  description: デフォルトリクエストヘッダー（JSON形式）
- name: timeout_seconds
  logical: タイムアウト秒数
  type: INTEGER
  length: null
  'null': true
  unique: false
  encrypted: false
  description: 接続タイムアウト時間（秒）
  default: 30
- name: retry_count
  logical: リトライ回数
  type: INTEGER
  length: null
  'null': true
  unique: false
  encrypted: false
  description: 失敗時のリトライ回数
  default: 3
- name: retry_interval
  logical: リトライ間隔
  type: INTEGER
  length: null
  'null': true
  unique: false
  encrypted: false
  description: リトライ間隔（秒）
  default: 5
- name: rate_limit_per_minute
  logical: 分間レート制限
  type: INTEGER
  length: null
  'null': true
  unique: false
  encrypted: false
  description: 1分間あたりのリクエスト制限数
- name: is_enabled
  logical: 有効フラグ
  type: BOOLEAN
  length: null
  'null': true
  unique: false
  encrypted: false
  description: 連携設定が有効かどうか
  default: true
- name: health_check_url
  logical: ヘルスチェックURL
  type: VARCHAR
  length: 500
  'null': true
  unique: false
  encrypted: false
  description: 連携先の死活監視用URL
- name: last_health_check
  logical: 最終ヘルスチェック
  type: TIMESTAMP
  length: null
  'null': true
  unique: false
  encrypted: false
  description: 最終ヘルスチェック実行日時
- name: health_status
  logical: ヘルス状態
  type: ENUM
  length: null
  'null': true
  unique: false
  encrypted: false
  description: 連携先の状態（HEALTHY:正常、UNHEALTHY:異常、UNKNOWN:不明）
  enum_values:
  - HEALTHY
  - UNHEALTHY
  - UNKNOWN
- name: integrationconfig_id
  logical: SYS_IntegrationConfigの主キー
  type: SERIAL
  length: null
  'null': false
  unique: false
  encrypted: false
  description: SYS_IntegrationConfigの主キー
  default: null
- name: is_deleted
  logical: 論理削除フラグ
  type: BOOLEAN
  length: null
  'null': false
  unique: false
  encrypted: false
  description: 論理削除フラグ
  default: 'False'
- name: created_at
  logical: 作成日時
  type: TIMESTAMP
  length: null
  'null': false
  unique: false
  encrypted: false
  description: 作成日時
  default: CURRENT_TIMESTAMP
- name: updated_at
  logical: 更新日時
  type: TIMESTAMP
  length: null
  'null': false
  unique: false
  encrypted: false
  description: 更新日時
  default: CURRENT_TIMESTAMP
indexes:
- name: idx_integration_config_tenant_key
  columns:
  - - tenant_id
  - - integration_key
  unique: true
  description: テナント別連携キー検索用（一意）
- name: idx_integration_config_type
  columns:
  - - integration_type
  unique: false
  description: 連携タイプ別検索用
- name: idx_integration_config_enabled
  columns:
  - - is_enabled
  unique: false
  description: 有効設定検索用
- name: idx_integration_config_health
  columns:
  - - health_status
  - - last_health_check
  unique: false
  description: ヘルス状態検索用
- name: idx_integration_config_auth_type
  columns:
  - - auth_type
  unique: false
  description: 認証タイプ別検索用
constraints:
- name: uk_integration_config_tenant_key
  type: UNIQUE
  description: テナント内連携キー一意制約
  columns:
  - - tenant_id
  - - integration_key
- name: chk_integration_config_type
  type: CHECK
  description: 連携タイプ値チェック制約
  condition: integration_type IN ('WEBHOOK', 'API', 'OAUTH', 'SMTP')
- name: chk_integration_config_auth_type
  type: CHECK
  description: 認証タイプ値チェック制約
  condition: auth_type IN ('NONE', 'BASIC', 'BEARER', 'OAUTH2', 'API_KEY')
- name: chk_integration_config_health_status
  type: CHECK
  description: ヘルス状態値チェック制約
  condition: health_status IS NULL OR health_status IN ('HEALTHY', 'UNHEALTHY', 'UNKNOWN')
- name: chk_integration_config_timeout_positive
  type: CHECK
  description: タイムアウト秒数正数チェック制約
  condition: timeout_seconds > 0
- name: chk_integration_config_retry_positive
  type: CHECK
  description: リトライ設定正数チェック制約
  condition: retry_count >= 0 AND retry_interval >= 0
foreign_keys: []
sample_data:
- id: IC001
  tenant_id: TENANT001
  integration_key: slack_webhook
  integration_name: Slack通知連携
  integration_type: WEBHOOK
  endpoint_url: https://hooks.slack.com/services/T00000000/B00000000/XXXXXXXXXXXXXXXXXXXXXXXX
  auth_type: NONE
  auth_config: null
  connection_config: '{"channel": "#notifications", "username": "SkillBot", "icon_emoji":
    ":robot_face:"}'
  request_headers: '{"Content-Type": "application/json"}'
  timeout_seconds: 30
  retry_count: 3
  retry_interval: 5
  rate_limit_per_minute: 60
  is_enabled: true
  health_check_url: null
  last_health_check: null
  health_status: UNKNOWN
- id: IC002
  tenant_id: TENANT001
  integration_key: teams_connector
  integration_name: Microsoft Teams連携
  integration_type: WEBHOOK
  endpoint_url: https://outlook.office.com/webhook/xxx/IncomingWebhook/yyy/zzz
  auth_type: NONE
  auth_config: null
  connection_config: '{"title": "スキル管理システム", "theme_color": "0078D4"}'
  request_headers: '{"Content-Type": "application/json"}'
  timeout_seconds: 30
  retry_count: 3
  retry_interval: 5
  rate_limit_per_minute: 30
  is_enabled: true
  health_check_url: null
  last_health_check: null
  health_status: UNKNOWN
- id: IC003
  tenant_id: TENANT001
  integration_key: smtp_server
  integration_name: メール送信サーバー
  integration_type: SMTP
  endpoint_url: smtp.company.com:587
  auth_type: BASIC
  auth_config: '{"username": "noreply@company.com", "password": "encrypted_password"}'
  connection_config: '{"use_tls": true, "use_ssl": false, "from_address": "noreply@company.com",
    "from_name": "スキル管理システム"}'
  request_headers: null
  timeout_seconds: 60
  retry_count: 2
  retry_interval: 10
  rate_limit_per_minute: 100
  is_enabled: true
  health_check_url: null
  last_health_check: '2025-06-01 19:00:00'
  health_status: HEALTHY
notes:
- 認証設定（auth_config）は暗号化必須
- 接続設定・リクエストヘッダーはJSON形式で柔軟な設定に対応
- レート制限により外部システムへの負荷を制御
- ヘルスチェック機能により連携先の状態を監視
- リトライ機能により一時的な障害に対応
- テナント別設定により個別カスタマイズに対応
- 無効化された設定は連携処理から除外される
- 同一テナント内で連携キーは重複不可
- 無効化された設定は連携処理から除外される
- 認証情報は暗号化して保存する
- タイムアウト・リトライ設定は正数である必要がある
- レート制限は外部システムの制約に応じて設定
- ヘルスチェックは定期的に実行し状態を更新
- OAuth2認証の場合はトークン更新処理が必要
- SMTP設定の場合は送信テストを実行して確認
business_rules:
- 同一テナント内で連携キーは重複不可
- 無効化された設定は連携処理から除外される
- 認証情報は暗号化して保存する
- タイムアウト・リトライ設定は正数である必要がある
- レート制限は外部システムの制約に応じて設定
- ヘルスチェックは定期的に実行し状態を更新
- OAuth2認証の場合はトークン更新処理が必要
- SMTP設定の場合は送信テストを実行して確認
